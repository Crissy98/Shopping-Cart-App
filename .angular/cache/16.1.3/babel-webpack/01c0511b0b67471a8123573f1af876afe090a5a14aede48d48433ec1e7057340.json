{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    //define an array that will store the items that were added into the cart\n    this.items = [];\n  }\n  //this method adds in a product of type Product into the card\n  addToCart(product) {\n    this.items.push(product);\n    console.log(product);\n  }\n  // this is a method that returns all the products in the card\n  getItems() {\n    return this.items;\n  }\n  //method that clears all the items in the card\n  clearItems() {\n    this.items = [];\n    return this.items;\n  }\n  //method that removes a selected from the card based on the product.ids\n  removeItem(productId) {\n    const index = this.items.findIndex(product => product.id === productId);\n    if (index !== -1) {\n      this.items.splice(index, 1);\n    }\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartService","constructor","items","addToCart","product","push","console","log","getItems","clearItems","removeItem","productId","index","findIndex","id","splice","factory","ɵfac","providedIn"],"sources":["/Users/cristina.mihaila/Documents/Projects/Shopping Cart App/src/app/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from './products';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class CartService {\n  //define an array that will store the items that were added into the cart\n  items: Product[] = [];\n\n  //this method adds in a product of type Product into the card\n  addToCart(product: Product){\n    this.items.push(product);\n    console.log(product);\n  }\n\n  // this is a method that returns all the products in the card\n  getItems():Product[]{\n    return this.items;\n  }\n\n  //method that clears all the items in the card\n  clearItems(){\n    this.items=[];\n    return this.items;\n  }\n\n  //method that removes a selected from the card based on the product.ids\n  removeItem(productId: number): void {\n    const index = this.items.findIndex(product => product.id === productId);\n    if (index !== -1) {\n      this.items.splice(index, 1);\n    }\n  }\n}\n"],"mappings":";AAQA,OAAM,MAAOA,WAAW;EALxBC,YAAA;IAME;IACA,KAAAC,KAAK,GAAc,EAAE;;EAErB;EACAC,SAASA,CAACC,OAAgB;IACxB,IAAI,CAACF,KAAK,CAACG,IAAI,CAACD,OAAO,CAAC;IACxBE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACtB;EAEA;EACAI,QAAQA,CAAA;IACN,OAAO,IAAI,CAACN,KAAK;EACnB;EAEA;EACAO,UAAUA,CAAA;IACR,IAAI,CAACP,KAAK,GAAC,EAAE;IACb,OAAO,IAAI,CAACA,KAAK;EACnB;EAEA;EACAQ,UAAUA,CAACC,SAAiB;IAC1B,MAAMC,KAAK,GAAG,IAAI,CAACV,KAAK,CAACW,SAAS,CAACT,OAAO,IAAIA,OAAO,CAACU,EAAE,KAAKH,SAAS,CAAC;IACvE,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACV,KAAK,CAACa,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;EAE/B;;AA3BWZ,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;EAAAC,UAAA,EAJV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}